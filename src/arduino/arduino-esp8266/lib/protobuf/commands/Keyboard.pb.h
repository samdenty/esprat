/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.2 at Sat Jan 12 22:10:13 2019. */

#ifndef PB_COMMANDS_KEYBOARD_PB_H_INCLUDED
#define PB_COMMANDS_KEYBOARD_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _commands_TypeTextRequest {
    pb_callback_t text;
/* @@protoc_insertion_point(struct:commands_TypeTextRequest) */
} commands_TypeTextRequest;

typedef struct _commands_PressKeyRequest {
    int32_t key_code;
/* @@protoc_insertion_point(struct:commands_PressKeyRequest) */
} commands_PressKeyRequest;

/* Default values for struct fields */

/* Initializer values for message structs */
#define commands_PressKeyRequest_init_default    {0}
#define commands_TypeTextRequest_init_default    {{{NULL}, NULL}}
#define commands_PressKeyRequest_init_zero       {0}
#define commands_TypeTextRequest_init_zero       {{{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define commands_TypeTextRequest_text_tag        1
#define commands_PressKeyRequest_key_code_tag    1

/* Struct field encoding specification for nanopb */
extern const pb_field_t commands_PressKeyRequest_fields[2];
extern const pb_field_t commands_TypeTextRequest_fields[2];

/* Maximum encoded size of messages (where known) */
#define commands_PressKeyRequest_size            11
/* commands_TypeTextRequest_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define KEYBOARD_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
